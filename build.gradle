buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			name = 'Fabric'
			url = 'http://maven.modmuss50.me/'
		}
		maven {
			url "https://plugins.gradle.org/m2/"
		}

	}
	dependencies {
		classpath "net.fabricmc:fabric-loom:0.2.0-SNAPSHOT"
	}
}

plugins {
	id "com.jfrog.artifactory" version "4.9.0"
}

apply plugin: net.fabricmc.loom.LoomGradlePlugin
apply plugin: 'maven-publish'
//Not needed yet, but a few things can just be uncommented if, at some point, we do.
//apply plugin: 'com.github.johnrengelman.shadow'

repositories {
	maven { url 'http://server.bbkr.space:8081/artifactory/libs-snapshot/' }
	//mavenLocal()
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "cotton-energy"
group = "io.github.cottonmc"
version = "1.0.0+19w08a"

dependencies {
	minecraft "com.mojang:minecraft:19w08a"
	mappings "net.fabricmc:yarn:19w08a.4"
	modCompile "net.fabricmc:fabric-loader:0.3.7.108"
	modCompile "net.fabricmc:fabric:0.2.2.103"
	
	modCompile "io.github.prospector.silk:SilkAPI:1.2.0-34"
	
	modCompile "io.github.cottonmc:cotton-ecs:1.0.0+19w05a-SNAPSHOT"
	//modCompile "io.github.cottonmc:cotton:0.0.2+19w03a-SNAPSHOT" //Not sure we even need this at the moment
	
	implementation "com.google.code.findbugs:jsr305:3.0.2"
}

if(rootProject.file('private.gradle').exists()) { //gives people more ways to configure the project for publish
	apply from: 'private.gradle';
}

task sourcesJar(type: Jar) {
	baseName = archivesBaseName
	classifier = "sources"
	from sourceSets.main.allSource
	from sourceSets.main.resources
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
		
			artifactId = "cotton-energy"
			version = version+"-SNAPSHOT" //For now, for artifactory
			
			pom.withXml {
				def pomFile = asNode()
				def depsNode = pomFile.get("dependencies")
				pomFile.remove(depsNode)
				
				def newDeps = pomFile.appendNode("dependencies")
				configurations.modCompile.getResolvedConfiguration().getFirstLevelModuleDependencies().each {
					def artifactNode = newDeps.appendNode("dependency")
					artifactNode.appendNode('groupId', it.moduleGroup)
					artifactNode.appendNode('artifactId', it.moduleName)
					artifactNode.appendNode('version', it.moduleVersion)
				}
			}
			artifacts = [
				artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
					classifier null
					builtBy remapJar
				},
				artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") { //release jar - file location not provided anywhere in loom
					classifier "dev"
					builtBy remapJar
				},
				artifact (tasks.sourcesJar)
			]
		}
	}
	repositories {
		if (rootProject.ext.has("localMavenUrl")) {
			maven {
				url = rootProject.ext.localMavenUrl
			}
		}
	}
}

artifactory {
	if (project.hasProperty("artifactoryUsername")) {
		contextUrl = 'http://server.bbkr.space:8081/artifactory/'
		publish {
			repository {
				repoKey = "libs-snapshot-local"
				username = artifactoryUsername
				password = artifactoryPassword
			}
			defaults {
				publications('maven')
				
				publishArtifacts = true
				publishPom = true
			}
		}
	} else {
		println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
	}
}



/* //Enable for shadow, and add shadow classifier to the artifact names in publishing
shadowJar {
	relocate 'blue.endless.jankson', 'io.github.cottonmc.repackage.blue.endless.jankson'
	classifier = "shadow"
	configurations = [project.configurations.shadow]
}

remapJar {
	dependsOn shadowJar
	jar = tasks.shadowJar.archivePath
}

//The following is probably just me being paranoid
tasks.publish.mustRunAfter remapJar
*/